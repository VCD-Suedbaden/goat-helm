# Default values for common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: "docker.io"
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

organisation: Plan4Better
projectName: goat
host: ""
locale:
  language: en
superuser:
  name: user
  surname: user
  password: ""
  email: example@example.com
  storage: 500000 
  activeStudyArea: 91620000
api:
  secret: ""
  port: 5000
cors:
  origins: ""
smtp:
  tls: true
  port: 587
  host: ""
  user: ""
  password: ""
  fromEmail: ""
AWS:
  keyID: ""
  accessKey: ""
  bucket: ""
r5:
  host: 172.17.0.1
  authorisation: YWRtaW46YWRtaW4 
  jvmHeapGb: 4 
celeryd:
  queues: ""
  brokerUrl: ""
  nodes: ""
  bin: ""
  app: ""
  chdir: ""
  logfile: ""
  pidfile: ""
vue:
  searchKey: 
  searchUrl:
  fontawesomeToken:
sentryDSN: ""
namespace: ""

backend:
  image:
    registry: docker.io
    repository: josaur/goat
    tag: "backend"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  
  env:
    BACKEND_CORS_ORIGINS=["http://localhost"]
    SENTRY_DSN=
    INSTALL_DEV=True
    INSTALL_JUPYTER=True
    DISABLE_NUMBA_STARTUP_CALL=True    
    USE_PYGEOS=0

frontend:
  image:
    registry: docker.io
    repository: josaur/goat
    tag: "frontend"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  env:
  replica: 1

postgresql:
  enabled: false
  auth:
    username: goat
    password: ""
    database: goat
    host: ""
  ## if enabled
  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""

redis:
  enabled: false 
  port: 6379
  host: ""
  auth:
    password: ""
    existingSecret: ""
  architecture: standalone 
  master.persistence.enabled: false

rabbitmq:
  enabled: false
  host: ""
  auth:
    username: goat
    password: ""
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""

mongodb:
  enabled: false
  auth:
    username: goat
    password:
    database: goat
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    #kubernetes.io/ingress.class: nginx
    #cert-manager.io/cluster-issuer: letsencrypt-prod
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: example.com
   
 # tls: 
 #   - secretName: chart-example-tls
 #     hosts:
 #       - 

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}

tolerations: []

affinity: {}
